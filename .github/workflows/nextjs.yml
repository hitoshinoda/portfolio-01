# .github/workflows/nextjs.yml
name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          # package-lock.json があれば npm を優先 (ログに基づき)
          if [ -f "${{ github.workspace }}/package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20" # プロジェクトで使用しているNodeバージョン
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # configure-pages に Next.js の設定注入を任せる
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next # これで basePath, output, images.unoptimized を注入

      # リポジトリ名を抽出して output に設定
      - name: Set Repository Name Output
        id: setvars
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')
          echo "Extracted REPO_NAME=$REPO_NAME"
          echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT

      # デバッグ用ステップは削除 (任意)
      # - name: Check Build Environment Configuration ...

      - name: Restore cache # .next/cache をリストア
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # キャッシュキー (必要に応じて調整)
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s*', '**.[mc]js') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies # 依存関係をインストール
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      # --- ↓↓↓ ビルドステップに env を追加し、リポジトリ名を渡す ↓↓↓ ---
      - name: Build with Next.js
        env:
          # GITHUB_REPOSITORY_NAME を next build プロセスに渡す
          # next.config.ts はこれを読み込んで NEXT_PUBLIC_BASE_PATH を設定する
          GITHUB_REPOSITORY_NAME: ${{ steps.setvars.outputs.repo_name }}
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      # --- ↑↑↑ ビルドステップに env を追加 ---

      - name: Upload artifact # out ディレクトリをアップロード
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # デプロイジョブ (変更なし)
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
